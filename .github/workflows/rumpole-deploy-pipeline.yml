name: Rumpole Build Pipeline
on:
  pull_request:
  push:
    branches:
      - main
      - feature/**
      - bug/**
  workflow_dispatch:
permissions: write-all
jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'rumpole-gateway/**'
            frontend:
              - 'rumpole-ui/**'

  # JOB to build and test backend code
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Use .NET Core sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build rumpole-gateway/rumpole-gateway.csproj --configuration Release --no-restore
      - name: Run tests
        run: dotnet test rumpole-gateway.tests/rumpole-gateway.tests.csproj --configuration Release /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: rumpole-gateway.tests/TestResults/coverage.info
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: TestResults/coverage.info
          minimum-coverage: 80
          artifact-name: rumpole-gateway-code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: rumpole-gateway.tests
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      - name: Publish
        run: dotnet publish rumpole-gateway/rumpole-gateway.csproj --configuration Release --output ${{ github.workspace }}/rumpole-gateway-drop
      - uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/rumpole-gateway-drop
          name: rumpole-gateway-drop

  # JOB to build and test frontend code
  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/rumpole-ui/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: ${{ github.workspace }}/rumpole-ui/
      - name: Remove .env file
        run: |
          rm -f \
            rumpole-ui/.env \
      - name: Set up node 
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: npm ci
      - name: Install GovUK React Frontend pack
        run: npm install govuk-frontend@4.0.1
      - name: Install GovUK React JSX pack
        run: npm install govuk-react-jsx
      - name: Install prettier
        run: npm install -g prettier
      - name: Prettify code
        uses: creyD/prettier_action@v4.2
        with:
          working_directory: ${{ github.workspace }}/rumpole-ui/
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Carry out Unit testing
        run: npm run test:ci
      - name: Carry out Cypress testing
        run: npm run cy:ci
        env:
          CI: false
      - name: Run the build
        run: npm run build
        env:
          CI: false
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/rumpole-ui/build
          name: rumpole-ui-drop
      - name: Combine unit and cypress test coverage reports
        run: npm run coverage
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: coverage-merged/lcov.info
          minimum-coverage: 80
          artifact-name: rumpole-ui-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ github.workspace }}/rumpole-ui/
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
