trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - "rumpole-gateway/*"
      - "RumpoleGateway/*"

pool:
  vmImage: "ubuntu-latest"

variables:
  functionName: "rumpole-gateway"
  appName: "fa-rumpole-gateway"
  buildConfiguration: "Release"

steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: "build"
      projects: "$(functionName)/$(functionName).csproj"
      arguments: "--configuration $(buildConfiguration)"
    displayName: "Build"

  - task: DotNetCoreCLI@2
    inputs:
      command: "test"
      projects: "$(functionName)*tests/$(functionName)*tests.csproj"
      arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    displayName: "Run tests"

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: false
      projects: "$(functionName)/$(functionName).csproj"
      arguments: "--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)"
      zipAfterPublish: False
    displayName: "Publish"

  # - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
  #   displayName: 'Install Code coverage tool'  
  
  # - script: 'reportgenerator -reports:$(BuildConfiguration)/**/coverage.cobertura.xml -targetdir:$(BuildConfiguration)/coverlet/reports -reporttypes:"Cobertura"'  
  #   displayName: 'Create code coverage results'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '**/*coverage.cobertura.xml'
    displayName: 'Publish code coverage results'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'rumpole-gateway-drop'
      publishLocation: 'Container'
